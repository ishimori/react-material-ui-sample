{"version":3,"sources":["components/templates/GenericTemplate.tsx","components/pages/ProductPage.tsx","components/pages/HomePage.tsx","services/calendar.js","components/pages/CalendarElement/index.jsx","components/pages/CalendarBoard/presentation.jsx","components/pages/CalendarBoard/container.jsx","redux/calendar/actions.js","redux/calendar/reducer.js","redux/rootReducer.js","components/Navigation/presentation.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","createMuiTheme","typography","fontFamily","join","palette","primary","main","colors","useStyles","makeStyles","createStyles","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","pageTitle","marginBottom","spacing","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","link","textDecoration","color","text","secondary","Copyright","Typography","variant","align","to","Date","getFullYear","GenericTemplate","children","classes","React","useState","open","setOpen","ThemeProvider","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","component","noWrap","Drawer","Divider","List","ListItem","button","ListItemIcon","ListItemText","Container","maxWidth","Box","pt","createData","name","category","weight","price","rows","table","minWidth","ProductPage","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","row","scope","HomePage","createCalendar","month","firstDay","getMonth","firstDayIndex","day","Array","fill","_","i","diffFromFirstDay","add","year","dayjs","CalendarElement","today","textColor","m1","m2","format","isSameMonth","date","isFirstDay","isToday","d1","d2","isSameDay","days","CalendarBoard","calendar","GridList","cols","cellHeight","d","c","toISOString","connect","state","stateProps","CALENDAR_SET_MONTH","init","calendarReducer","action","type","payload","rootReducer","combineReducers","StyledToolbar","withStyles","StyledTypography","margin","Navigation","CalendarToday","size","locale","store","createStore","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c1d42da.chunk.js","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport * as colors from \"@material-ui/core/colors\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport EventIcon from \"@material-ui/icons/Event\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"Noto Sans JP\",\r\n      \"Lato\",\r\n      \"游ゴシック Medium\",\r\n      \"游ゴシック体\",\r\n      \"Yu Gothic Medium\",\r\n      \"YuGothic\",\r\n      \"ヒラギノ角ゴ ProN\",\r\n      \"Hiragino Kaku Gothic ProN\",\r\n      \"メイリオ\",\r\n      \"Meiryo\",\r\n      \"ＭＳ Ｐゴシック\",\r\n      \"MS PGothic\",\r\n      \"sans-serif\",\r\n    ].join(\",\"),\r\n  },\r\n  palette: {\r\n    primary: { main: colors.blue[800] }, // テーマの色\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24,\r\n    },\r\n    toolbarIcon: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: \"0 8px\",\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: \"none\",\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    pageTitle: {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    drawerPaper: {\r\n      position: \"relative\",\r\n      whiteSpace: \"nowrap\",\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: \"hidden\",\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: theme.spacing(9),\r\n      },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: \"100vh\",\r\n      overflow: \"auto\",\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: \"flex\",\r\n      overflow: \"auto\",\r\n      flexDirection: \"column\",\r\n    },\r\n    link: {\r\n      textDecoration: \"none\",\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  })\r\n);\r\n\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"/\">\r\n        管理画面\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport interface GenericTemplateProps {\r\n  children: React.ReactNode;\r\n  title: string;\r\n}\r\n\r\nconst GenericTemplate: React.FC<GenericTemplateProps> = ({\r\n  children,\r\n  title,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"absolute\"\r\n          className={clsx(classes.appBar, open && classes.appBarShift)}\r\n        >\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(\r\n                classes.menuButton,\r\n                open && classes.menuButtonHidden\r\n              )}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              className={classes.title}\r\n            >\r\n              管理画面タイトル\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <Link to=\"/\" className={classes.link}>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <HomeIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"トップページ\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/products\" className={classes.link}>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <ShoppingCartIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"商品ページ\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/calendar\" className={classes.link}>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <EventIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"カレンダー\" />\r\n              </ListItem>\r\n            </Link>\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Typography\r\n              component=\"h2\"\r\n              variant=\"h5\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              className={classes.pageTitle}\r\n            >\r\n              {title}\r\n            </Typography>\r\n            {children}\r\n            <Box pt={4}>\r\n              <Copyright />\r\n            </Box>\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default GenericTemplate;\r\n","import {\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport GenericTemplate from \"../templates/GenericTemplate\";\r\nconst createData = (\r\n  name: string,\r\n  category: string,\r\n  weight: number,\r\n  price: number\r\n) => {\r\n  return { name, category, weight, price };\r\n};\r\n\r\nconst rows = [\r\n  createData(\"チョコレート\", \"お菓子\", 100, 120),\r\n  createData(\"ケーキ\", \"お菓子\", 400, 480),\r\n  createData(\"りんご\", \"フルーツ\", 500, 360),\r\n  createData(\"バナナ\", \"フルーツ\", 200, 300),\r\n  createData(\"みかん\", \"フルーツ\", 250, 180),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\nconst ProductPage: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <GenericTemplate title=\"商品ページ\">\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>商品名</TableCell>\r\n              <TableCell align=\"right\">カテゴリー</TableCell>\r\n              <TableCell align=\"right\">重量(g)</TableCell>\r\n              <TableCell align=\"right\">価格(円)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.category}</TableCell>\r\n                <TableCell align=\"right\">{row.weight}</TableCell>\r\n                <TableCell align=\"right\">{row.price}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </GenericTemplate>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n","import React from \"react\";\r\nimport GenericTemplate from \"../templates/GenericTemplate\";\r\n\r\nconst HomePage: React.FC = () => {\r\n  return (\r\n    <GenericTemplate title=\"トップページ\">\r\n      <>トップページ内容</>\r\n    </GenericTemplate>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import dayjs from \"dayjs\";\r\n\r\nexport const createCalendar = (month) => {\r\n  // // 今月の最初の日を追加\r\n  // const firstDay = dayjs().startOf(\"month\");\r\n  // // 曜日\r\n  // const firstDayIndex = firstDay.day();\r\n  const firstDay = getMonth(month);\r\n  const firstDayIndex = firstDay.day();\r\n  // console.log(firstDay);\r\n  return Array(35)\r\n    .fill(0)\r\n    .map((_, i) => {\r\n      // 今週の日付を差分計算で取得\r\n      const diffFromFirstDay = i - firstDayIndex;\r\n      const day = firstDay.add(diffFromFirstDay, \"day\");\r\n      return day;\r\n    });\r\n};\r\nexport const getMonth = ({ year, month }) => {\r\n  return dayjs(`${year} - ${month}`);\r\n};\r\n\r\nexport const isSameDay = (d1, d2) => {\r\n  const format = \"YYYYMMDD\";\r\n  return d1.format(format) === d2.format(format);\r\n};\r\n\r\nexport const isSameMonth = (m1, m2) => {\r\n  const format = \"YYYYMM\";\r\n  return m1.format(format) === m2.format(format);\r\n};\r\n\r\nexport const isFirstDay = (day) => day.date() === 1;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport dayjs from \"dayjs\";\r\n// ==========ここから変更する==========\r\nimport { isSameMonth, isFirstDay, isSameDay } from \"../../../services/calendar\";\r\n\r\nconst CalendarElement = ({ day }: any) => {\r\n  // 当日かどうか判断\r\n  const today = dayjs();\r\n\r\n  // 今月以外をグレーダウン\r\n  const isCurrentMonth = isSameMonth(day, today);\r\n  const textColor = isCurrentMonth ? \"textPrimary\" : \"textSecondary\";\r\n\r\n  // 月の最初だけ月情報をつける\r\n  const format = isFirstDay(day) ? \"M月D日\" : \"D\";\r\n\r\n  // 当日か判断\r\n  const isToday = isSameDay(day, today);\r\n\r\n  return (\r\n    <div className=\"element\">\r\n      <Typography\r\n        className=\"date\"\r\n        color={textColor}\r\n        align=\"center\"\r\n        variant=\"caption\"\r\n        component=\"div\"\r\n      >\r\n        <span className={isToday ? \"today\" : \"\"}>{day.format(format)}</span>\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarElement;\r\n","import React from \"react\";\r\nimport CalendarElement from \"../CalendarElement\";\r\n// import { createCalendar } from \"../../../services/calendar\";\r\nimport GenericTemplate from \"../../templates/GenericTemplate\";\r\nimport { GridList, Typography } from \"@material-ui/core\";\r\n\r\nimport \"./style.scss\";\r\n\r\n// const calendar = createCalendar();\r\nconst days = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"];\r\n\r\nconst CalendarBoard = ({ calendar }) => {\r\n  return (\r\n    <GenericTemplate title=\"カレンダー\">\r\n      <div className=\"container\">\r\n        <GridList className=\"grid\" cols={7} spacing={0} cellHeight=\"auto\">\r\n          {days.map((d) => (\r\n            <li key={d}>\r\n              <Typography\r\n                className=\"days\"\r\n                color=\"textSecondary\"\r\n                align=\"center\"\r\n                variant=\"caption\"\r\n                component=\"div\"\r\n              >\r\n                {d}\r\n              </Typography>\r\n            </li>\r\n          ))}\r\n          {calendar.map((c) => (\r\n            <li key={c.toISOString()}>\r\n              <CalendarElement day={c} />\r\n            </li>\r\n          ))}\r\n        </GridList>\r\n      </div>\r\n    </GenericTemplate>\r\n  );\r\n};\r\n\r\nexport default CalendarBoard;\r\n","import { connect } from \"react-redux\";\r\nimport CalendarBoard from \"./presentation\";\r\nimport { createCalendar } from \"../../../services/calendar\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  calendar: state.calendar,\r\n});\r\n\r\nconst mergeProps = (stateProps) => ({\r\n  calendar: createCalendar(stateProps.calendar),\r\n});\r\n\r\nexport default connect(mapStateToProps, null, mergeProps)(CalendarBoard);\r\n// export default connect(mapStateToProps)(CalendarBoard);\r\n","export const CALENDAR_SET_MONTH = \"CALENDAR_SET_MONTH\";\r\n\r\nexport const calendarSetMonth = (payload) => ({\r\n  type: CALENDAR_SET_MONTH,\r\n  payload,\r\n});\r\n","import dayjs from \"dayjs\";\r\nimport { CALENDAR_SET_MONTH } from \"./actions\";\r\n\r\nconst day = dayjs();\r\n\r\nconst init = {\r\n  year: day.year(),\r\n  month: day.month() + 1, // 0-11 なので、1-12にする\r\n};\r\nconst calendarReducer = (state = init, action) => {\r\n  // console.log(state);\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CALENDAR_SET_MONTH:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default calendarReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport calendarReducer from \"./calendar/reducer\";\r\n\r\nconst rootReducer = combineReducers({ calendar: calendarReducer });\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\n\r\nimport { IconButton, Toolbar, Typography, withStyles } from \"@material-ui/core\";\r\n\r\nimport ArrowBackIos from \"@material-ui/icons/ArrowBackIos\";\r\nimport ArrowForwardIos from \"@material-ui/icons/ArrowForwardIos\";\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport { CalendarToday } from \"@material-ui/icons\";\r\n\r\nconst StyledToolbar = withStyles({\r\n  root: { padding: \"0\" },\r\n})(Toolbar);\r\nconst StyledTypography = withStyles({\r\n  root: { margin: \"0 30px 0 10px\" },\r\n})(Typography);\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <StyledToolbar>\r\n      <IconButton>\r\n        <DehazeIcon />\r\n      </IconButton>\r\n      <IconButton>\r\n        <CalendarToday size=\"small\" />\r\n      </IconButton>\r\n      <StyledTypography color=\"textSecondary\" variant=\"h5\" component=\"h1\">\r\n        カレンダー\r\n      </StyledTypography>\r\n      <IconButton size=\"small\">\r\n        <ArrowBackIos />\r\n      </IconButton>\r\n      <IconButton size=\"small\">\r\n        <ArrowForwardIos />\r\n      </IconButton>\r\n    </StyledToolbar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\nimport ProductPage from \"./components/pages/ProductPage\";\r\nimport HomePage from \"./components/pages/HomePage\";\r\nimport CalendarPage from \"./components/pages/CalendarBoard/container\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"./redux/rootReducer\";\r\n\r\nimport dayjs from \"dayjs\";\r\nimport \"dayjs/locale/ja\";\r\nimport Navigation from \"./components/Navigation/presentation\";\r\n\r\ndayjs.locale(\"ja\");\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/products\">products</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/calendar\">calendar</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <HomePage />\r\n          </Route>\r\n          <Route path=\"/products\" exact>\r\n            <ProductPage />\r\n          </Route>\r\n          <Route path=\"/calendar\" exact>\r\n            <Provider store={store}>\r\n              <Navigation />\r\n              <CalendarPage />\r\n            </Provider>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}